// Estrutura dos t√≥picos e subt√≥picos
export const blogData = [
  {
    id: 1,
    title: "Node.js",
    subtopics: [
      {
        id: 1,
        title: "Node.js para Iniciantes",
        content: [
          {
            type: "p",
            text: "E a√≠, dev! üëã T√° come√ßando agora no mundo do Node.js e n√£o sabe por onde come√ßar? Relaxa, que hoje a gente vai descomplicar tudo! Vamos falar desde o que √© Node.js at√© como criar seu primeiro servidor. Bora? üòé",
          },
          {
            type: "h2",
            text: "O que √© Node.js?",
          },

          {
            type: "p",
            text: "Node.js n√£o √© uma linguagem de programa√ß√£o, viu? √â um ambiente de execu√ß√£o que permite rodar JavaScript fora do navegador (sim, JS no backend! üéâ)."
          },
          {
            type: "ul",
            items: [
              "üîπ Criado em 2009 por Ryan Dahl",
              "üîπ Baseado no motor V8 do Google Chrome (aquele que executa JS super r√°pido)",
              "üîπ Event-driven e n√£o-bloqueante (ou seja, lida com muitas conex√µes sem travar)"
            ]
          },
          {
            type: "p",
            text: "Resumindo: Node.js deixa voc√™ usar JavaScript para criar aplica√ß√µes server-side, como APIs, servidores e at√© chatbots!"
          },
          {
            type: "h2",
            text: "‚ú® Por Que Usar Node.js?",
          },
          {
            type: "p",
            text: "Se voc√™ j√° manja de JavaScript, vai adorar o Node! Mas n√£o √© s√≥ por isso que ele √© t√£o popular:"

          },
          {
            type: "ul",
            items: [
              "‚úÖ R√°pido e eficiente (gra√ßas ao modelo n√£o-bloqueante)",
              "‚úÖ √ìtimo para aplica√ß√µes em tempo real (como chats e jogos online)",
              "‚úÖ Ecossistema gigante (npm tem milh√µes de pacotes prontos pra usar!)",
              "‚úÖ F√°cil de aprender (se j√° sabe JS, metade do caminho t√° feito)",
            ],
          },
          {
            type: "h2",
            text: "üîß Instalando o Node.js",
          },
          {
            type: "p",
            text: "Antes de come√ßar, voc√™ precisa instalar o Node no seu PC. √â super f√°cil:"
          },
          {
            type: "ul",
            items: [
              "Acesse https://nodejs.org/",
              "Baixe a vers√£o LTS (recomendada para maioria dos usu√°rios)",
              "Siga o instalador (next, next, finish! ‚úîÔ∏è)",
            ]
          },
          {
            type: "p",
            text: "Depois, abra o terminal e digite:"
          },
          {
            type: "code",
            language: "bash",
            content:
              "node -v",
          },
          {
            type: "p",
            text: "Se aparecer a vers√£o (ex: v18.12.1), tudo certo! üéâ"
          },
        ],
      },
      {
        id: 2,
        title: "O Que √© npm?",
        content: [
          {
            type: "p",
            text: "O npm (Node Package Manager) √© muito mais do que um simples gerenciador de pacotes - √© a ferramenta fundamental que torna o Node.js t√£o poderoso e popular. Vamos explorar em detalhes como ele funciona e por que √© t√£o importante.",
          },

          {
            type: "h2",
            text: "üîç O Que √© npm Exatamente?",
          },
          {
            type: "p",
            text: "O npm √©:",
          },
          {
            type: "ul",
            items: [
              "‚úÖ Gerenciador de Pacotes Padr√£o do Node.js (como uma loja de aplicativos para c√≥digo)",
              "‚úÖ Maior Registro de Software do Mundo (com mais de 2 milh√µes de pacotes p√∫blicos)",
              "‚úÖ Ferramenta de Gest√£o de Depend√™ncias para seus projetos",
            ]
          },
          {
            type: "p",
            text: "Ele resolve um problema cr√≠tico: como compartilhar e reutilizar c√≥digo de forma organizada.",
          },
          {
            type: "h2",
            text: "‚öôÔ∏è Como o npm Funciona?",
          },
          {
            type: "p",
            text: "Estrutura B√°sica",
          },
          {
            type: "ul",
            items: [
              "Registro npm: Um reposit√≥rio online de pacotes (https://www.npmjs.com/)",
              "CLI (Interface de Linha de Comando): Ferramenta que voc√™ usa no terminal",
              "package.json: Arquivo que descreve seu projeto e suas depend√™ncias",
            ]
          },
          {
            type: "p",
            text: "Comandos Essenciais",
          },
          {
            type: "ul",
            items: [
              "‚û°Ô∏è‚Äã Comando: npm init | O que faz: Cria um novo projeto Node.js | Exemplo: npm init -y (cria com configura√ß√µes padr√£o)",
              "‚û°Ô∏è‚Äã Comando: npm install | O que faz: Instala um pacote | Exemplo: npm install express",
              "‚û°Ô∏è‚Äã Comando: npm uninstall | O que faz: Remove um pacote | Exemplo: npm uninstall lodash",
              "‚û°Ô∏è‚Äã Comando: npm update | O que faz: Atualiza pacotes | Exemplo: npm update express",
              "‚û°Ô∏è‚Äã Comando: npm list | O que faz: Mostra pacotes instalados | Exemplo: npm list --depth=0 (mostra apenas os principais)",

            ]
          },
          {
            type: "h2",
            text: "üí° Boas Pr√°ticas com npm",
          },
          {
            type: "ul",
            items: [
              "‚úîÔ∏è‚Äã‚Äã Sempre inicie projetos com npm init",
              "‚úîÔ∏è‚Äã‚Äã Verifique vers√µes com npm outdated",
              "‚úîÔ∏è‚Äã‚Äã Atualize regularmente com npm update",
              "‚úîÔ∏è‚Äã‚Äã Use npm audit para verificar vulnerabilidades",
              "‚úîÔ∏è‚Äã‚Äã Documente scripts √∫teis no package.json",

            ]
          },
        ],
      },
      {
        id: 3,
        title: "Express.js",
        content: [
          {
            type: "p",
            text: "Se voc√™ j√° entendeu o b√°sico do Node.js, agora √© hora de conhecer o Express - o framework que torna a cria√ß√£o de servidores web muito mais f√°cil! Vamos explicar tudo de forma simples e pr√°tica. ‚ú®"
          },
          {
            type: "h2",
            text: "O Que √© Express.js?",
          },


          {
            type: "p",
            text: "O Express √© um framework minimalista para Node.js que facilita:"
          },
          {
            type: "ul",
            items: [
              "üîπ Criar servidores web e APIs",
              "üîπ Definir rotas (URLs que respondem a requisi√ß√µes)",
              "üîπ Gerenciar requisi√ß√µes (requests) e respostas (responses)",
              "üîπ Adicionar middlewares (fun√ß√µes intermedi√°rias)"
            ]
          },
          {
            type: "p",
            text: "üëâ √â como um superpoder para o Node.js!"
          },
          {
            type: "h2",
            text: "üí° Por Que Usar Express?",
          },
          {
            type: "ul",
            items: [
              "üîπ Simplicidade: Faz em 5 linhas o que no Node puro levaria 20",
              "üîπ Flexibilidade: Voc√™ controla tudo, sem muitas opini√µes impostas",
              "üîπ Middleware: Sistema de plugins poderoso",
              "üîπ Comunidade: Muitos tutoriais e pacotes dispon√≠veis"
            ]
          },
          {
            type: "h2",
            text: "üõ†Ô∏è Como Usar Express - Passo a Passo",
          },
          {
            type: "h3",
            text: "Instala√ß√£o",
          },
          {
            type: "p",
            text: "Primeiro, crie um projeto Node e instale o Express:"

          },
          {
            type: "code",
            language: "bash",
            content:
              "npm init -y\nnpm install express",
          },
          {
            type: "h3",
            text: "Servidor B√°sico",
          },
          {
            type: "p",
            text: "Crie um arquivo server.js:"

          },
          {
            type: "code",
            language: "javascript",
            content:
              "import express from 'express')\nconst app = express()\nconst port = 3000\n\n// Rota principal\napp.get('/', (req, res) => {\nres.send('Ol√° Mundo! üåé')\n})\n\n// Inicia o servidor\napp.listen(port, () => {\nconsole.log(`Servidor rodando em http://localhost:${port}`)\n})",
          },
          {
            type: "h3",
            text: "Principais Conceitos",
          },
          {
            type: "p",
            text: "üîÑ Rotas - Definem como o servidor responde a requisi√ß√µes:"

          },
          {
            type: "code",
            language: "javascript",
            content:
              "// GET /produtos\napp.get('/produtos', (req, res) => {\nres.send('Lista de produtos')\n})\n\n// POST /produtos\napp.post('/produtos', (req, res) => {\nres.send('Criar novo produto')\n})",
          },
          {
            type: "p",
            text: "üì¶ Middlewares - Fun√ß√µes que processam requisi√ß√µes antes de chegar nas rotas:"
          },
          {
            type: "code",
            language: "javascript",
            content:
              "// Middleware para ler JSON\napp.use(express.json())\n\n// Middleware customizado\napp.use((req, res, next) => {\n console.log('Requisi√ß√£o recebida:', req.method, req.url)\n next() // Passa para o pr√≥ximo middleware/rota\n})",
          },
          {
            type: "p",
            text: "üìù Par√¢metros - Captura dados das URLs:"
          },
          {
            type: "code",
            language: "javascript",
            content:
              "// /produtos/123\napp.get('/produtos/:id', (req, res) => {\nconst productId = req.params.id\nres.send(`Detalhes do produto ${productId}`)\n})",
          },
          {
            type: "h2",
            text: "üîç Exemplo Pr√°tico: API Simples",
          },
          {
            type: "p",
            text: "Vamos criar uma mini API para gerenciar tarefas:"
          },
          {
            type: "code",
            language: "javascript",
            content:
              "import express from 'express'\nconst app = express()\n\n// Habilita leitura de JSON\napp.use(express.json())\n\n// 'Banco de dados' tempor√°rio\nlet tasks = [\n{ id: 1, title: 'Aprender Express', done: false }\n]\n\n// GET /tasks - Lista todas tarefas\napp.get('/tasks', (req, res) => {\n  res.json(tasks)\n})\n\n// POST /tasks - Adiciona nova tarefa\napp.post('/tasks', (req, res) => {\n const newTask = req.body\ntasks.push(newTask)\n  res.status(201).send('Tarefa criada!')\n})\n\n",
          },
          {
            type: "h3",
            text: "Dica:",
          },
          {
            type: "p",
            text: "A documenta√ß√£o oficial https://expressjs.com √© excelente para se aprofundar!",
            links: [
              {
                url: "https://expressjs.com/",
                text: "https://expressjs.com"
              }
            ]
          },
        ],
      },
    ],
  },
  {
    id: 2,
    title: "MongoDB",
    subtopics: [
      {
        id: 1,
        title: "ü•∏‚Äã Em breve...",
        content: [

        ],
      },
    ],
  },
  {
    id: 3,
    title: "M√©todos √Ågeis",
    subtopics: [
      {
        id: 1,
        title: "ü•∏‚Äã Em breve...",
        content: [

        ],
      },
    ],
  },
  {
    id: 4,
    title: "Power BI",
    subtopics: [
      {
        id: 1,
        title: "ü•∏‚Äã Em breve...",
        content: [

        ],
      },
    ],
  },
];